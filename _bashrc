# If not running interactively, don't do anything
case $- in
    *i*) ;;
    *) return ;;
esac

# We are running interactively. Let's start to setup environment.

# Preload {{{
######################################################################

# How many colors on terminal? Colorize!

#COLORS
if [ $(tput colors) -gt 0 ] ; then
  BLACK=$(tput setaf 0)
    RED=$(tput setaf 1)
  GREEN=$(tput setaf 2)
  BROWN=$(tput setaf 3)
   BLUE=$(tput setaf 4)
 PURPLE=$(tput setaf 5)
   CYAN=$(tput setaf 6)
  LGRAY=$(tput setaf 7)
  DGRAY=$(tput bold; tput setaf 0)
   LRED=$(tput bold; tput setaf 1)
 LGREEN=$(tput bold; tput setaf 2)
 YELLOW=$(tput bold; tput setaf 3)
  LBLUE=$(tput bold; tput setaf 4)
LPURPLE=$(tput bold; tput setaf 5)
  LCYAN=$(tput bold; tput setaf 6)
  WHITE=$(tput bold; tput setaf 7)
   CRST=$(tput sgr0 )
    RST=$(tput op)
fi

# Load functions
if [ -f "${HOME}/.bash_functions" ]; then
  source "${HOME}/.bash_functions"
fi

# }}}

# Terminal independant settings {{{
###########################################################################

# Add paths
addpath ${HOME}/bin
addpath /Applications/MacVim.app/Contents/MacOS/
addpath "/c/Anaconda"
addpath "/c/Anaconda2"

# Avoid quick logouts
export TMOUT=3600

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
export HISTCONTROL=ignoreboth:erasedups
export HISTSIZE=100000
export HISTFILESIZE=3000000
export HISTTIMEFORMAT="%F %T : "
export HISTIGNORE="[ \t]*:&:[fb]g:exit:ls:history:?:??"

# append to the history file, don't overwrite it
shopt -s histappend

# Multilines together
shopt -s cmdhist

# One day I will return to vim mode
set -o emacs

# Enable notifications of running jobs
set -o notify

# Case insesitive filename globbing
shopt -s nocaseglob

# Fix small tipos on CDs
shopt -s cdspell

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

#}}}

# Applications configuration {{{
######################################################################

# I dont think this is necessary, probably just on OSX, if is that case
# when I need again I will create a darwin test to run this code
# Gvim if it exists... ftw!
vim=`type -P vim`
if [ "${vim}" == "" ]; then
    vim="gvim -v"
fi
alias vim="$vim"

# Configure Editors Vim FTW!
export EDITOR="$vim"
export GIT_EDITOR="$vim"

# Configure nmon
export NMON=vcmLknNDojt.

# CVS Sample
CVS_RSH=ssh
CVSROOT=:ext:imorgado@HOSTNAME:/PATH
export CVS_RSH CVSROOT 

# MC settings
export MC_SKIN=$HOME/.mc/solarized.ini

XML_CATALOG_FILES="${HOME}/Dropbox/xml/catalog /etc/xml/catalog"
export XML_CATALOG_FILES

#}}} 

# Terminal Configuration {{{
###########################################################################

OSVERSION=$( uname -o )
case ${OSVERSION} in
	*Linux*|*linux*)
		;;
	*Darwin*)
		export CLICOLOR=TRUE
		;;
	*)
		;;
esac

# Set $TERM for libvte terminals that set $TERM wrong (like gnome-terminal)
{
	[ "${TERM}" = "xterm" ] && type ldd && type grep && type tput && [ -L "/proc/${PPID}/exe" ] && {
	if ldd /proc/${PPID}/exe | grep libvte; then
		if [ "`tput -Txterm-256color colors`" = "256" ]; then
			TERM=xterm-256color
		elif [ "`tput -Txterm-256color colors`" = "256" ]; then
			TERM=xterm-256color
		elif tput -T xterm; then
			TERM=xterm
		fi
	fi
}
} >/dev/null 2>/dev/null

# Necessary for TERMINATOR
[ "${COLORTERM}" = "gnome-terminal" ] && TERM=xterm-256color

# Used in some aux moments 
# Maybe there are better ways to check this
case ${TERM} in
  xterm|vt100|rxvt|cygwin) # Old fashined VT
    TERM_IS_COLOR=true
    TERM_IS_256COLOR=false
    TERM_CAN_TITLE=true
  ;;
  *xterm*|rxvt|Eterm|eterm|screen*) # screen.linux|screen-w
    TERM_IS_COLOR=true
    TERM_IS_256COLOR=true
    TERM_CAN_TITLE=true
  ;;
  linux)  # Linux VT
    TERM_IS_COLOR=true
    TERM_IS_256COLOR=false
    TERM_CAN_TITLE=false
  ;;
  *) # What left
    TERM_IS_COLOR=false
    TERM_IS_256COLOR=false
    TERM_CAN_TITLE=false
  ;;
esac

# dircolors... make sure that we have a color terminal, dircolors exists, and
# ls supports it.
if ${TERM_IS_COLOR} && ( dircolors --help && ls --color ) &> /dev/null; then
  COLOR_ENVIRONMENT=true

  # List files from highest priority to lowest.  As soon as the loop finds 
  # one that works, it will exit.
  POSSIBLE_DIR_COLORS="$HOME/.dir_colors /etc/DIR_COLORS"
  for DIR in ${POSSIBLE_DIR_COLORS}  ; do
    [[ -f "${DIR}" ]] && [[ -r "${DIR}" ]] && eval `dircolors -b "${DIR}"` && break
  done
fi

# Are we on cygwin without proper ansi escaping
if [ "${TERM}" == "cygwin" ]; then
    LANG=en_US.UTF-8
    LC_CTYPE="en_US.UTF-8"
    LC_NUMERIC="en_US.UTF-8"
    LC_TIME="en_US.UTF-8"
    LC_COLLATE="en_US.UTF-8"
    LC_MONETARY="en_US.UTF-8"
    LC_MESSAGES="en_US.UTF-8"
    LC_ALL=
    alias mc="LANG=C mc"

    umask 027
fi

# Load Xresources
[ -f ~/.Xresources ] && [ -n "${DISPLAY}" ] && xrdb ~/.Xresources

#}}}

# Terminal dependant settings {{{
###########################################################################

# Colorize term (no exceptions for now)
if ${COLOR_ENVIRONMENT}; then
    PS1="${debian_chroot:+($debian_chroot)}\[${BLUE}\]\u\[${GREEN}\]@\[${BLUE}\]\h\[${CRST}\]:\[${LRED}\]\w\[${CRST}\] \[\$prevCmd\]\$\[$CRST\]"
else
    PS1="${debian_chroot:+($debian_chroot)}\u\@\h:\w \[\$prevCmd\]\$"
fi

# Add git and svn branch names
[ -x "$(which git)" ] && PS1="$PS1\$(parse_git_branch)"
[ -x "$(which svn)" ] && PS1="$PS1\$(parse_svn_branch)"
export PS1="${PS1} "

PROMPT_COMMAND=bash_prompt_command
PROMPT_COMMAND="history -a; history -c; history -r; ${PROMPT_COMMAND}"
export PROMPT_COMMAND

# }}}

# Final configurations {{{
######################################################################

# Load some external files
loadresource ~/.bash_aliases
loadresource ~/.bash_python
loadresource ~/.bash_nda
loadresource ~/.fzf.bash
[ ! $(shopt -oq posix) ] && loadresource /etc/bash_completion
COMP_CVS_REMOTE=1
COMP_CONFIGURE_HINTS=1
COMP_TAR_INTERNAL_PATHS=1

#}}}

# vim: set foldmethod=marker:
