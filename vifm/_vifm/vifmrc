set vicmd=vim
set grepprg="ag --line-numbers %i %a %s"
set trash
set history=100
set followlinks
set fastrun
set sortnumbers
set undolevels=100
set norunexec
set fusehome=~/tmp/fuse
set wildmenu
set ignorecase
set smartcase
set hlsearch
set incsearch
set scrolloff=3
set slowfs=curlftpfs
set syscalls
"set dotdirs=rootparent
"set relativenumber
set numberwidth=3
set title
set statusline="%t%= [%A %u:%g %E %d]"

" What should be saved automatically between vifm runs
" Like in previous versions of vifm
" set vifminfo=options,filetypes,commands,bookmarks,dhistory,state,cs
" Like in vi
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory
  \,phistory,fhistory,dirstack,registers,bookmarks

mark h ~/
mark t ~/.vifm/Trash

" TMUX integration
nnoremap <silent> <c-h> :if paneisat('left')   | execute '!tmux select-pane -L %i' | else | execute 'wincmd h' | endif<cr>
nnoremap <silent> <c-j> :if paneisat('bottom') | execute '!tmux select-pane -D %i' | else | execute 'wincmd j' | endif<cr>
nnoremap <silent> <c-k> :if paneisat('top')    | execute '!tmux select-pane -U %i' | else | execute 'wincmd k' | endif<cr>
nnoremap <silent> <c-l> :if paneisat('right')  | execute '!tmux select-pane -R %i' | else | execute 'wincmd l' | endif<cr>
" account for <c-h>/<bs> conflict
"nnoremap <silent> <bs>  :if paneisat('left')   | execute '!tmux select-pane -L %i' | else | execute 'wincmd h' | endif<cr>


" Like MC
nmap <space> tj
nmap <f3> :!less %f<cr>
nmap <f4> :edit<cr>
nmap <f5> :copy<cr>
nmap <f6> :move<cr>
nmap <f7> :mkdir<space>""<left>
nmap <f8> :delete<cr>
nmap cd :cd<space>

" Resize
nmap < <c-w><
nmap > <c-w>>

nnoremap <silent> w : if &quickview && !layoutis('only')
                   \|     view
                   \| else
                   \|     if layoutis('only')
                   \|         if &lines + 50 < &columns | vsplit | else | split | endif
                   \|     endif
                   \|     view!
                   \|     execute 'qnoremap w q:view|only|qunmap w<lt>cr>'
                   \|     execute 'wincmd w'
                   \| endif
                   \| <cr>

colorscheme dark_trial

" :com[mand] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command df df -h %m 2> /dev/null
command diff vim -d %f %F
command run !! ./%f
command make !!make
command vgrep vim "+grep %a"

command! extract extract %a %f %n
command! extract! extract -f %a %f %n


" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

" Pdf, PostScript & Djvu
filextype *.pdf,*.ps,*.djvu
  \ zathura %f %i &,
  \ open %f &,
fileview *.pdf
  \ pdftotext -nopgbrk %c -

" Audio
filetype *.wav,*.mp3,*.flac,*.ogg,*.oga,*.m4a,*.wma,*.aac,*.3gp,*.opus,*.wv
  \ mpv %f,
fileview *.wav,*.mp3,*.flac,*.ogg,*.oga,*.m4a,*.wma,*.aac,*.3gp,*.opus,*.wv
  \ mediainfo
 
" Video
filextype *.avi,*.mp4,*.wmv,*.dat,*.ogv,*.mkv,*.mpg,*.vob,*.flv,*.webm,*.mts,*.m2ts,*.rm,*.mov
  \ mpv %f %i &,
fileview *.avi,*.mp4,*.wmv,*.dat,*.ogv,*.mkv,*.mpg,*.vob,*.flv,*.webm,*.mts,*.m2ts,*.rm,*.mov
  \ mediainfo
 
" Midi
filetype *.mid,*.midi
  \ timidity %f,
fileview *.mid,*.midi
  \ mediainfo

" Web
filetype *.html,*.htm
  \ firefox %f %i &,
fileview *.html,*.htm
  \ elinks --dump

" Object
filetype *.o
  \ {List Symbols} nm %f | less

" Image
filextype *.gif
  \ {Loop} mpv --loop=inf %f %i &,

filextype *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm,*.svg,*.ico
  \ open %f &,
  \ image %c %i &,
fileview *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm,*.svg,*.ico
  \ identify %f

" MD5
filetype *.md5
  \ {Check MD5 hash sum} md5sum -c %f,

" IsoMount
filetype *.iso
  \ {Mount with fuseiso}
  \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
  \ {Mount with sshfs}
  \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR,

" FtpMount
filetype *.ftp
  \ {Mount with curlftpfs}
  \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR,
 
" Office files
filextype *.doc,*.docx,*.xls,*.xlsx
  \ libreoffice %f &
fileview *.docx
  \ docx2txt.pl %f -
 
" Torrents
fileview *.torrent
  \ transmission %f

" LAST ONE!
" Open all other files with default system programs
filetype * xdg-open %i &
" All other files get free syntax highlighting
fileview *
  \ highlight --out-format=ansi --force -qWJ %pw -t 2 %c


" " Archive
" filetype *.tar.gz,*.tgz,*.tar.bz,*.tbz,*.tar.bz2,*.tbz2,*.tar.Z,*.tZ,*.tar.lzo,*.tzo
"   \,*.tar.lz,*.tlz,*.tar.xz,*.txz,*.tar.7z,*.t7z,*.tar,*.zip,*.jar,*.war,*.rar
"   \,*.lha,*.lzh,*.7z,*.alz,*.ace,*.a,*.arj,*.arc,*.rpm,*.deb,*.cab,*.gz,*.bz,*.bz2
"   \,*.Z,*.lzma,*.lzo,*.lz,*.xz,*.rz,*.lrz,*.7z,*.cpio
"   \ {View contents} als %f | less,
"   \ {Extract here} aunpack %f,
 
" fileview *.tar.gz,*.tgz,*.tar.bz,*.tbz,*.tar.bz2,*.tbz2,*.tar.Z,*.tZ,*.tar.lzo,*.tzo
"   \,*.tar.lz,*.tlz,*.tar.xz,*.txz,*.tar.7z,*.t7z,*.tar,*.zip,*.jar,*.war,*.rar
"   \,*.lha,*.lzh,*.7z,*.alz,*.ace,*.a,*.arj,*.arc,*.rpm,*.deb,*.cab,*.gz,*.bz,*.bz2
"   \,*.Z,*.lzma,*.lzo,*.lz,*.xz,*.rz,*.lrz,*.7z,*.cpio
"   \ als %f
" 

" " Open file in the background using its default program
" nmap gb :file &<cr>l
" 
" " Yank current directory path into the clipboard
" nmap yd :!echo %d | xclip %i<cr>
" 
" " Yank current file path into the clipboard
" nmap yf :!echo %c:p | xclip %i<cr>
" 
" " Opening console in current directory
" nmap \t :!xterm &<cr>
" 
" " Opening vim to edit .vifmrc
" nmap \c :execute ':!vim $MYVIFMRC' | restart<cr>
" 
" " Toggle wrap setting on ,w key
" nmap \w :set wrap!<cr>
" 
" " External commands
" nmap ! :!
" nmap @ :!<space>%f<left><left><left>
 
 
" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.
"set timefmt="%a %F %T" 
