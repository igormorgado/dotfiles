#!/bin/bash

pushd "${HOME}"

# Verify if dir exists
if [ ! -e "${HOME}/dotfiles" ]; then
	if [ -e "${HOME}/Dropbox/dotfiles" ]; then
		ln -sf Dropbox/dotfiles
	else
		if type git &> /dev/null; then
			git clone http://github.com/igormorgado/dotfiles
		else
			echo "ERROR: dotfiles not found neither git binary. Please it and rerun."
			exit
		fi
	fi
fi

PACKAGES="
bash-completion
htop
irssi
links
lynx
mtr
mutt
ncdu
pastebinit
tmux
vim-nox
apache2
mlocate
x11proto-composite-dev
x11proto-core-dev
x11proto-damage-dev
x11proto-dri2-dev
x11proto-fixes-dev
x11proto-gl-dev
x11proto-input-dev
x11proto-kb-dev
x11proto-randr-dev
x11proto-record-dev
x11proto-render-dev
x11proto-scrnsaver-dev
x11proto-video-dev
x11proto-xext-dev
x11proto-xf86vidmode-dev
x11proto-xinerama-dev
gperf
ipython3
pep8
pyflakes
python-autopep8
python3-flake8
python3-pep8
"

case $1 in
	fzf)
		ln -sf dotfiles/_fzf .fzf
		ln -sf dotfiles/_fzf.bash .fzf.bash
		;;
    vim|vi)
		mkdir -p ~/.tmp
        ln -sf dotfiles/_vimrc .vimrc
        ln -sf dotfiles/_vim .vim
        ln -sf dotfiles/_viminfo  .viminfo
        ln -sf dotfiles/_ctags  .ctags
        ;;
    subversion|svn)
        ln -sf dotfiles/_subversion .subversion
        ;;
    todo)
        ln -sf dotfiles/_todo .todo
        ;;
    git)
        ln -sf dotfiles/_gitconfig .gitconfig
        ;;
    bash|bashrc|shell)
		ln -sf dotfiles/bin bin
        ln -sf dotfiles/_bashrc .bashrc
        ln -sf dotfiles/_bash_aliases .bash_aliases
        ln -sf dotfiles/_bash_functions  .bash_functions
        ln -sf dotfiles/_bash_history .bash_history
        ln -sf dotfiles/_bash_logout  .bash_logout
        ln -sf dotfiles/_bash_profile .bash_profile
        ln -sf dotfiles/_bash_python  .bash_python
        ln -sf dotfiles/_dir_colors .dir_colors
        ln -sf dotfiles/_inputrc .inputrc
        ln -sf dotfiles/_profile .profile
        ln -sf dotfiles/_bash_nda  .bash_nda
        ;;
    mutt)
        ln -sf dotfiles/_mutt .mutt
        ;;
    python)
        ln -sf dotfiles/_pdbrc .pdbrc
        ln -sf dotfiles/_pdbrc.py .pdbrc.py
        ln -sf dotfiles/_pythonrc.py .pythonrc.py
        ;;
    fonts)
        ln -sf dotfiles/_fonts .fonts
		ln -sf ~/dotfiles/_fonts ~/.local/share/fonts
        ;;
    tmux)
        ln -sf dotfiles/_tmux.conf .tmux.conf
        ;;
    alexandria)
        ln -sf dotfiles/_alexandria .alexandria
        ;;
    ssh)
        if [ -d ~/.ssh/ ]; then
            echo "Dir ~/.ssh/ exists. Exiting"
        else
            ln -s dotfiles/_ssh .ssh
            chmod 600 ~/.ssh/identity ~/.ssh/igormorgado ~/.ssh/id_rsa
        fi
        ;;
    mc)
		mkdir -p .config
        rm -rf .config/mc .mc
        ln -sf dotfiles/_config/mc .config/mc
        ;;
    term)
        rm -rf .config/terminator
        ln -sf ../dotfiles/_config/terminator .config/terminator
        ;;
	# Update this with ~/.config/user-dirs.dirs (xdg-user-dirs)
    desktop)
        if [ "$(uname)" == "Linux" ]
        then
            if [ "${LANG%.*}" == "pt_BR" ]
            then 
                for DIR in Biblioteca Documentos Música Imagens Público Modelos Vídeos bin
                do
                    rmdir ~/$DIR && ln -sf Dropbox/$DIR
                done
            else
                for DIR in Library Documents Music Pictures Public Templates Videos bin
                do
                    rmdir ~/$DIR && ln -sf Dropbox/$DIR
                done
            fi
        fi
        ;;
	debpkgs)
		sudo apt-get update
		sudo apt-get -f -y --force-yes "${PACKAGES}"
		;;
    *)
        echo Options
		cat dotfiles/$0 | grep "^[| a-zA-Z0-9]*)$" | tr -d " )" | tr "|" "\n" | sed 's/^/\t/g'
        ;;
esac

popd
